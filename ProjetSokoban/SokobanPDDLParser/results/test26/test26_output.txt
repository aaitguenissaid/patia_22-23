[  ####,   #  ###, ### *. ####, #  . # $  #, #  *  $   #, ###* ######,   # @#,   #  #,   ####]
  ####
  #  ###
### *. ####
#  . # $  #
#  *  $   #
###* ######
  # @#
  #  #
  ####
WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.

parsing domain file "domain.pddl" done successfully
parsing problem file "Scoria3-Level6.pddl" done successfully
# WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf
# WARNING: Unable to attach Serviceability Agent. Unable to attach even with module exceptions: [org.openjdk.jol.vm.sa.SASupportException: Sense failed., org.openjdk.jol.vm.sa.SASupportException: Sense failed., org.openjdk.jol.vm.sa.SASupportException: Sense failed.]

problem instantiation done successfully (342 actions, 209 fluents)

* Starting ASTAR search with MAX heuristic 
* ASTAR search succeeded

found plan as follows:

000: (           move g64 p64 p54 up) [0]
001: (           move g64 p54 p44 up) [0]
002: ( push g64 b24 p44 p43 p42 left) [0]
003: (        move g64 p43 p44 right) [0]
004: (         move g64 p44 p54 down) [0]
005: (         move g64 p54 p64 down) [0]
006: (         move g64 p64 p63 left) [0]
007: (   push g64 b24 p63 p53 p43 up) [0]
008: (        move g64 p53 p54 right) [0]
009: (           move g64 p54 p44 up) [0]
010: (           move g64 p44 p34 up) [0]
011: (         move g64 p34 p33 left) [0]
012: (           move g64 p33 p23 up) [0]
013: (           move g64 p23 p13 up) [0]
014: (        move g64 p13 p14 right) [0]
015: ( push g64 b24 p14 p24 p34 down) [0]
016: ( push g64 b24 p24 p34 p44 down) [0]
017: ( push g64 b24 p34 p44 p54 down) [0]
018: ( push g64 b24 p44 p54 p64 down) [0]
019: (         move g64 p54 p53 left) [0]
020: (   push g64 b24 p53 p43 p33 up) [0]
021: (   push g64 b24 p43 p33 p23 up) [0]
022: (        move g64 p33 p34 right) [0]
023: (           move g64 p34 p24 up) [0]
024: (        move g64 p24 p25 right) [0]
025: (        move g64 p25 p26 right) [0]
026: (         move g64 p26 p36 down) [0]
027: (push g64 b24 p36 p37 p38 right) [0]
028: (         move g64 p37 p47 down) [0]
029: (        move g64 p47 p48 right) [0]
030: (        move g64 p48 p49 right) [0]
031: (           move g64 p49 p39 up) [0]
032: ( push g64 b24 p39 p38 p37 left) [0]
033: ( push g64 b24 p38 p37 p36 left) [0]
034: (         move g64 p37 p47 down) [0]
035: ( push g64 b24 p47 p46 p45 left) [0]
036: ( push g64 b24 p46 p45 p44 left) [0]
037: ( push g64 b24 p45 p44 p43 left) [0]
038: (           move g64 p44 p34 up) [0]
039: (           move g64 p34 p24 up) [0]
040: (        move g64 p24 p25 right) [0]
041: (        move g64 p25 p26 right) [0]
042: ( push g64 b24 p26 p36 p46 down) [0]
043: (           move g64 p36 p26 up) [0]
044: (         move g64 p26 p25 left) [0]
045: (         move g64 p25 p24 left) [0]
046: (         move g64 p24 p34 down) [0]
047: (         move g64 p34 p44 down) [0]
048: (         move g64 p44 p54 down) [0]
049: (         move g64 p54 p53 left) [0]
050: (         move g64 p53 p63 down) [0]
051: (         move g64 p63 p73 down) [0]
052: (        move g64 p73 p74 right) [0]
053: (   push g64 b24 p74 p64 p54 up) [0]
054: (   push g64 b24 p64 p54 p44 up) [0]
055: (   push g64 b24 p54 p44 p34 up) [0]
056: (        move g64 p44 p45 right) [0]
057: (push g64 b24 p45 p46 p47 right) [0]
058: (           move g64 p46 p36 up) [0]
059: (           move g64 p36 p26 up) [0]
060: (         move g64 p26 p25 left) [0]
061: (         move g64 p25 p24 left) [0]
062: ( push g64 b24 p24 p34 p44 down) [0]
063: (         move g64 p34 p33 left) [0]
064: ( push g64 b24 p33 p43 p53 down) [0]
065: ( push g64 b24 p43 p53 p63 down) [0]
066: (        move g64 p53 p54 right) [0]
067: (   push g64 b24 p54 p44 p34 up) [0]
068: (        move g64 p44 p45 right) [0]
069: (        move g64 p45 p46 right) [0]
070: (           move g64 p46 p36 up) [0]
071: (           move g64 p36 p26 up) [0]
072: (         move g64 p26 p25 left) [0]
073: (         move g64 p25 p24 left) [0]
074: (           move g64 p24 p14 up) [0]
075: (         move g64 p14 p13 left) [0]
076: ( push g64 b24 p13 p23 p33 down) [0]
077: ( push g64 b24 p23 p33 p43 down) [0]
078: (           move g64 p33 p23 up) [0]
079: (        move g64 p23 p24 right) [0]
080: (        move g64 p24 p25 right) [0]
081: (        move g64 p25 p26 right) [0]
082: (         move g64 p26 p36 down) [0]
083: (         move g64 p36 p46 down) [0]
084: (         move g64 p46 p45 left) [0]
085: (         move g64 p45 p44 left) [0]
086: (   push g64 b24 p44 p34 p24 up) [0]
087: (         move g64 p34 p33 left) [0]
088: (           move g64 p33 p23 up) [0]
089: (push g64 b24 p23 p24 p25 right) [0]
090: (         move g64 p24 p34 down) [0]
091: (         move g64 p34 p44 down) [0]
092: (         move g64 p44 p54 down) [0]
093: (         move g64 p54 p53 left) [0]
094: (   push g64 b24 p53 p43 p33 up) [0]
095: (   push g64 b24 p43 p33 p23 up) [0]
096: (         move g64 p33 p32 left) [0]
097: (         move g64 p32 p31 left) [0]
098: (         move g64 p31 p41 down) [0]
099: (push g64 b24 p41 p42 p43 right) [0]
100: (push g64 b24 p42 p43 p44 right) [0]
101: (           move g64 p43 p33 up) [0]
102: (        move g64 p33 p34 right) [0]
103: (           move g64 p34 p24 up) [0]
104: (           move g64 p24 p14 up) [0]
105: (         move g64 p14 p13 left) [0]
106: ( push g64 b24 p13 p23 p33 down) [0]
107: (        move g64 p23 p24 right) [0]
108: (         move g64 p24 p34 down) [0]
109: ( push g64 b24 p34 p33 p32 left) [0]
110: (         move g64 p33 p43 down) [0]
111: (         move g64 p43 p42 left) [0]
112: (         move g64 p42 p41 left) [0]
113: (           move g64 p41 p31 up) [0]
114: (push g64 b24 p31 p32 p33 right) [0]
115: (         move g64 p32 p42 down) [0]
116: (        move g64 p42 p43 right) [0]
117: (         move g64 p43 p53 down) [0]
118: (        move g64 p53 p54 right) [0]
119: (   push g64 b24 p54 p44 p34 up) [0]
120: (        move g64 p44 p45 right) [0]
121: (        move g64 p45 p46 right) [0]
122: (           move g64 p46 p36 up) [0]
123: (        move g64 p36 p37 right) [0]
124: (        move g64 p37 p38 right) [0]
125: (         move g64 p38 p48 down) [0]
126: ( push g64 b24 p48 p47 p46 left) [0]
127: ( push g64 b24 p47 p46 p45 left) [0]
128: ( push g64 b24 p46 p45 p44 left) [0]
129: ( push g64 b24 p45 p44 p43 left) [0]
130: (   push g64 b24 p44 p34 p24 up) [0]
131: (         move g64 p34 p44 down) [0]
132: (         move g64 p44 p54 down) [0]
133: (         move g64 p54 p64 down) [0]
134: (         move g64 p64 p74 down) [0]
135: (         move g64 p74 p73 left) [0]
136: (   push g64 b24 p73 p63 p53 up) [0]

time spent:       0.05 seconds parsing 
                  0.23 seconds encoding 
                 55.29 seconds searching
                 55.57 seconds total time

memory used:      2.03 MBytes for problem representation
                330.89 MBytes for searching
                332.92 MBytes total


Done
