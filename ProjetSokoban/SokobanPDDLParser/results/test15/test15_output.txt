[ ####, ##  #, #   #####, # ....  #, # $$$$  #, ###  ####,   # @#,   ####]
 ####
##  #
#   #####
# ....  #
# $$$$  #
###  ####
  # @#
  ####
WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.

parsing domain file "domain.pddl" done successfully
parsing problem file "Scoria2-Level5.pddl" done successfully
# WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf
# WARNING: Unable to attach Serviceability Agent. Unable to attach even with module exceptions: [org.openjdk.jol.vm.sa.SASupportException: Sense failed., org.openjdk.jol.vm.sa.SASupportException: Sense failed., org.openjdk.jol.vm.sa.SASupportException: Sense failed.]

problem instantiation done successfully (234 actions, 152 fluents)

* Starting ASTAR search with MAX heuristic 
* ASTAR search succeeded

found plan as follows:

00: (           move g64 p64 p54 up) [0]
01: (   push g64 b42 p54 p44 p34 up) [0]
02: (         move g64 p44 p54 down) [0]
03: (         move g64 p54 p53 left) [0]
04: (   push g64 b42 p53 p43 p33 up) [0]
05: (   push g64 b42 p43 p33 p23 up) [0]
06: (         move g64 p33 p32 left) [0]
07: (         move g64 p32 p31 left) [0]
08: (         move g64 p31 p41 down) [0]
09: (push g64 b42 p41 p42 p43 right) [0]
10: (           move g64 p42 p32 up) [0]
11: (        move g64 p32 p33 right) [0]
12: ( push g64 b42 p33 p43 p53 down) [0]
13: (        move g64 p43 p44 right) [0]
14: (push g64 b42 p44 p45 p46 right) [0]
15: (           move g64 p45 p35 up) [0]
16: (        move g64 p35 p36 right) [0]
17: (        move g64 p36 p37 right) [0]
18: (         move g64 p37 p47 down) [0]
19: ( push g64 b42 p47 p46 p45 left) [0]
20: ( push g64 b42 p46 p45 p44 left) [0]
21: ( push g64 b42 p45 p44 p43 left) [0]
22: ( push g64 b42 p44 p43 p42 left) [0]
23: (           move g64 p43 p33 up) [0]
24: (push g64 b42 p33 p34 p35 right) [0]
25: (push g64 b42 p34 p35 p36 right) [0]
26: (         move g64 p35 p34 left) [0]
27: (         move g64 p34 p33 left) [0]
28: (         move g64 p33 p32 left) [0]
29: (           move g64 p32 p22 up) [0]
30: (           move g64 p22 p12 up) [0]
31: (        move g64 p12 p13 right) [0]
32: ( push g64 b42 p13 p23 p33 down) [0]
33: (         move g64 p23 p22 left) [0]
34: (         move g64 p22 p32 down) [0]
35: (push g64 b42 p32 p33 p34 right) [0]
36: (         move g64 p33 p43 down) [0]
37: (        move g64 p43 p44 right) [0]
38: (         move g64 p44 p54 down) [0]
39: (         move g64 p54 p64 down) [0]
40: (         move g64 p64 p63 left) [0]
41: (   push g64 b42 p63 p53 p43 up) [0]
42: (   push g64 b42 p53 p43 p33 up) [0]
43: (   push g64 b42 p43 p33 p23 up) [0]
44: (         move g64 p33 p32 left) [0]
45: (         move g64 p32 p31 left) [0]
46: (         move g64 p31 p41 down) [0]
47: (push g64 b42 p41 p42 p43 right) [0]
48: (           move g64 p42 p32 up) [0]
49: (        move g64 p32 p33 right) [0]
50: ( push g64 b42 p33 p43 p53 down) [0]
51: (        move g64 p43 p44 right) [0]
52: (        move g64 p44 p45 right) [0]
53: (           move g64 p45 p35 up) [0]
54: ( push g64 b42 p35 p34 p33 left) [0]
55: ( push g64 b42 p34 p33 p32 left) [0]
56: (         move g64 p33 p43 down) [0]
57: (         move g64 p43 p42 left) [0]
58: (         move g64 p42 p41 left) [0]
59: (           move g64 p41 p31 up) [0]
60: (           move g64 p31 p21 up) [0]
61: (        move g64 p21 p22 right) [0]
62: (           move g64 p22 p12 up) [0]
63: (        move g64 p12 p13 right) [0]
64: ( push g64 b42 p13 p23 p33 down) [0]
65: (         move g64 p23 p22 left) [0]
66: (         move g64 p22 p21 left) [0]
67: (         move g64 p21 p31 down) [0]
68: (         move g64 p31 p41 down) [0]
69: (        move g64 p41 p42 right) [0]
70: (   push g64 b42 p42 p32 p22 up) [0]
71: (push g64 b42 p32 p33 p34 right) [0]
72: (           move g64 p33 p23 up) [0]
73: (           move g64 p23 p13 up) [0]
74: (         move g64 p13 p12 left) [0]
75: ( push g64 b42 p12 p22 p32 down) [0]
76: (        move g64 p22 p23 right) [0]
77: (         move g64 p23 p33 down) [0]
78: (         move g64 p33 p43 down) [0]
79: (        move g64 p43 p44 right) [0]
80: (         move g64 p44 p54 down) [0]
81: (         move g64 p54 p64 down) [0]
82: (         move g64 p64 p63 left) [0]
83: (   push g64 b42 p63 p53 p43 up) [0]
84: (   push g64 b42 p53 p43 p33 up) [0]
85: (        move g64 p43 p44 right) [0]
86: (        move g64 p44 p45 right) [0]
87: (        move g64 p45 p46 right) [0]
88: (        move g64 p46 p47 right) [0]
89: (           move g64 p47 p37 up) [0]
90: ( push g64 b42 p37 p36 p35 left) [0]

time spent:       0.06 seconds parsing 
                  0.24 seconds encoding 
                  4.78 seconds searching
                  5.08 seconds total time

memory used:      1.29 MBytes for problem representation
                 22.63 MBytes for searching
                 23.91 MBytes total


Done
