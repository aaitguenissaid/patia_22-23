[####, #  #, #  #####, #  $   #, ##$* * #, #  .# ##, #.  @ #, #######]
####
#  #
#  #####
#  $   #
##$* * #
#  .# ##
#.  @ #
#######
WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.

parsing domain file "domain.pddl" done successfully
parsing problem file "Scoria2-Level2.pddl" done successfully
# WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf
# WARNING: Unable to attach Serviceability Agent. Unable to attach even with module exceptions: [org.openjdk.jol.vm.sa.SASupportException: Sense failed., org.openjdk.jol.vm.sa.SASupportException: Sense failed., org.openjdk.jol.vm.sa.SASupportException: Sense failed.]

problem instantiation done successfully (218 actions, 136 fluents)

* Starting ASTAR search with MAX heuristic 
* ASTAR search succeeded

found plan as follows:

000: (         move g64 p64 p63 left) [0]
001: (           move g64 p63 p53 up) [0]
002: (         move g64 p53 p52 left) [0]
003: (   push g64 b33 p52 p42 p32 up) [0]
004: (   push g64 b33 p42 p32 p22 up) [0]
005: (         move g64 p32 p31 left) [0]
006: (           move g64 p31 p21 up) [0]
007: (           move g64 p21 p11 up) [0]
008: (        move g64 p11 p12 right) [0]
009: ( push g64 b33 p12 p22 p32 down) [0]
010: ( push g64 b33 p22 p32 p42 down) [0]
011: ( push g64 b33 p32 p42 p52 down) [0]
012: (push g64 b33 p42 p43 p44 right) [0]
013: (         move g64 p43 p53 down) [0]
014: (         move g64 p53 p63 down) [0]
015: (        move g64 p63 p64 right) [0]
016: (        move g64 p64 p65 right) [0]
017: (           move g64 p65 p55 up) [0]
018: (   push g64 b33 p55 p45 p35 up) [0]
019: ( push g64 b33 p45 p44 p43 left) [0]
020: (           move g64 p44 p34 up) [0]
021: ( push g64 b33 p34 p33 p32 left) [0]
022: (        move g64 p33 p34 right) [0]
023: (         move g64 p34 p44 down) [0]
024: (        move g64 p44 p45 right) [0]
025: (        move g64 p45 p46 right) [0]
026: (           move g64 p46 p36 up) [0]
027: ( push g64 b33 p36 p35 p34 left) [0]
028: ( push g64 b33 p35 p34 p33 left) [0]
029: (         move g64 p34 p44 down) [0]
030: (        move g64 p44 p45 right) [0]
031: (         move g64 p45 p55 down) [0]
032: (         move g64 p55 p65 down) [0]
033: (         move g64 p65 p64 left) [0]
034: (         move g64 p64 p63 left) [0]
035: (         move g64 p63 p62 left) [0]
036: (         move g64 p62 p61 left) [0]
037: (           move g64 p61 p51 up) [0]
038: (push g64 b33 p51 p52 p53 right) [0]
039: (           move g64 p52 p42 up) [0]
040: (push g64 b33 p42 p43 p44 right) [0]
041: (push g64 b33 p43 p44 p45 right) [0]
042: (           move g64 p44 p34 up) [0]
043: (        move g64 p34 p35 right) [0]
044: ( push g64 b33 p35 p45 p55 down) [0]
045: (         move g64 p45 p44 left) [0]
046: (         move g64 p44 p43 left) [0]
047: (         move g64 p43 p42 left) [0]
048: (         move g64 p42 p52 down) [0]
049: (         move g64 p52 p62 down) [0]
050: (        move g64 p62 p63 right) [0]
051: (   push g64 b33 p63 p53 p43 up) [0]
052: (         move g64 p53 p52 left) [0]
053: (           move g64 p52 p42 up) [0]
054: (   push g64 b33 p42 p32 p22 up) [0]
055: (         move g64 p32 p31 left) [0]
056: (           move g64 p31 p21 up) [0]
057: (           move g64 p21 p11 up) [0]
058: (        move g64 p11 p12 right) [0]
059: ( push g64 b33 p12 p22 p32 down) [0]
060: ( push g64 b33 p22 p32 p42 down) [0]
061: ( push g64 b33 p32 p42 p52 down) [0]
062: (push g64 b33 p42 p43 p44 right) [0]
063: (push g64 b33 p43 p44 p45 right) [0]
064: (           move g64 p44 p34 up) [0]
065: ( push g64 b33 p34 p33 p32 left) [0]
066: (         move g64 p33 p43 down) [0]
067: (         move g64 p43 p53 down) [0]
068: (         move g64 p53 p63 down) [0]
069: (         move g64 p63 p62 left) [0]
070: (         move g64 p62 p61 left) [0]
071: (           move g64 p61 p51 up) [0]
072: (push g64 b33 p51 p52 p53 right) [0]
073: (         move g64 p52 p62 down) [0]
074: (        move g64 p62 p63 right) [0]
075: (   push g64 b33 p63 p53 p43 up) [0]
076: (         move g64 p53 p52 left) [0]
077: (           move g64 p52 p42 up) [0]
078: (   push g64 b33 p42 p32 p22 up) [0]
079: (         move g64 p32 p31 left) [0]
080: (           move g64 p31 p21 up) [0]
081: (           move g64 p21 p11 up) [0]
082: (        move g64 p11 p12 right) [0]
083: ( push g64 b33 p12 p22 p32 down) [0]
084: ( push g64 b33 p22 p32 p42 down) [0]
085: ( push g64 b33 p32 p42 p52 down) [0]
086: ( push g64 b33 p42 p52 p62 down) [0]
087: (        move g64 p52 p53 right) [0]
088: (         move g64 p53 p63 down) [0]
089: ( push g64 b33 p63 p62 p61 left) [0]
090: (           move g64 p62 p52 up) [0]
091: (           move g64 p52 p42 up) [0]
092: (           move g64 p42 p32 up) [0]
093: (        move g64 p32 p33 right) [0]
094: ( push g64 b33 p33 p43 p53 down) [0]
095: (        move g64 p43 p44 right) [0]
096: (           move g64 p44 p34 up) [0]
097: (        move g64 p34 p35 right) [0]
098: (        move g64 p35 p36 right) [0]
099: (         move g64 p36 p46 down) [0]
100: ( push g64 b33 p46 p45 p44 left) [0]
101: ( push g64 b33 p45 p44 p43 left) [0]
102: (           move g64 p44 p34 up) [0]
103: (         move g64 p34 p33 left) [0]
104: (         move g64 p33 p32 left) [0]
105: (         move g64 p32 p42 down) [0]
106: (         move g64 p42 p52 down) [0]
107: (         move g64 p52 p62 down) [0]
108: (        move g64 p62 p63 right) [0]
109: (        move g64 p63 p64 right) [0]
110: (        move g64 p64 p65 right) [0]
111: (   push g64 b33 p65 p55 p45 up) [0]

time spent:       0.06 seconds parsing 
                  0.22 seconds encoding 
                  3.54 seconds searching
                  3.81 seconds total time

memory used:      1.15 MBytes for problem representation
                 17.38 MBytes for searching
                 18.53 MBytes total


Done
